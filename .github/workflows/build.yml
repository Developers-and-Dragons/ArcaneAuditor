name: 🧪 Build (Diagnostic - Unsigned)

on:
  push:
    branches: [develop]
  pull_request:
    branches: [develop]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: windows-latest
            build: pwsh ./scripts/build.ps1
          - os: macos-latest
            build: bash ./scripts/build.sh

    runs-on: ${{ matrix.os }}

    steps:
      - name: 📥 Checkout source
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🧙 Setup uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "0.9.6"

      - name: 🧩 Install Python (uv managed)
        run: |
          echo "🕒 $(date '+%Y-%m-%d %H:%M:%S') Installing Python via uv"
          uv python install 3.12

      - name: 🔍 Verify Python runtime
        run: |
          echo "🕒 $(date '+%Y-%m-%d %H:%M:%S') Environment diagnostics"
          uv --version
          uv run python -V
          uv run python -c "import sys, sysconfig, platform, os; print('Python exe:', sys.executable); print('LIBDIR:', sysconfig.get_config_var('LIBDIR')); print('Platform:', platform.platform()); print('CWD:', os.getcwd())"
          echo "PATH=$PATH"

      - name: 🏗️ Build project with detailed logging
        run: |
          set -e
          echo "🕒 $(date '+%Y-%m-%d %H:%M:%S') Starting build script"
          mkdir -p build-logs
          {
            echo "================ BUILD START $(date '+%Y-%m-%d %H:%M:%S') ================"
            echo "Runner OS: $RUNNER_OS"
            echo "Job Name: $GITHUB_JOB"
            echo "Branch: $GITHUB_REF"
            echo "Commit: $GITHUB_SHA"
            echo "------------------------------------------------------"
            ${{ matrix.build }}
            echo "================ BUILD END $(date '+%Y-%m-%d %H:%M:%S') ================"
          } 2>&1 | tee build-logs/build_${{ runner.os }}.log

      - name: 📦 Upload build artifacts and logs
        uses: actions/upload-artifact@v4
        with:
          name: arcane-auditor-${{ runner.os }}
          path: |
            dist/ArcaneAuditor*.exe
            dist/ArcaneAuditor*.app*
            dist/ArcaneAuditorCLI*
            dist/ArcaneAuditorWeb.exe
            build-logs/
